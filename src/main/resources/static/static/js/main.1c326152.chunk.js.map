{"version":3,"sources":["components/HeaderComponent.jsx","service/BoardService.js","components/ListBoardComponent.js","components/FooterComponent.jsx","components/CreateBoardComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","className","href","Component","service_BoardService","BoardService","axios","get","board","post","ListBoardComponent","_useState","useState","_useState2","slicedToArray","boards","setBoards","useEffect","getBoards","then","res","data","catch","error","console","log","react_router_dom_dist","to","map","no","title","memberNo","createdTime","updatedTime","likes","counts","FooterComponent","CreateBoardComponent","changeTypeHandler","event","setState","type","target","changeTitleHandler","changeContentsHandler","contents","changeMemberNoHandler","createBoard","preventDefault","JSON","stringify","history","push","bind","assertThisInitialized","useNavigate","placeholder","name","onChange","onClick","cancel","style","marginLeft","App","components_HeaderComponent","dist","path","element","components_ListBoardComponent","components_CreateBoardComponent","components_FooterComponent","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.1c326152.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass HeaderComponent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                        <div><a href=\"/\" className=\"navbar-brand\"> Board-FullStack-App</a> </div>\n                    </nav>\n                </header>\n            </div>\n        );\n    }\n\n\n}\n\nexport default HeaderComponent;","import axios from \"axios\";\n\nconst BOARD_API_BASE_URL = \"http://localhost:8080/api/board\";\n\nclass BoardService{\n\n    getBoards(){\n        return axios.get(BOARD_API_BASE_URL);\n    }\n\n    createBoard(board){\n        return axios.post(BOARD_API_BASE_URL, board);\n    }\n}\n\nexport default new BoardService();","import React, {useEffect, useState} from 'react';\nimport BoardService from \"../service/BoardService\";\nimport axios from \"axios\";\nimport {Link, useNavigate} from \"react-router-dom\";\n\nconst ListBoardComponent = () =>{\n\n    //const navigate = useNavigate();\n    const [boards, setBoards] = useState([]);\n\n    useEffect(() => {\n        BoardService.getBoards()\n            .then((res) => {\n            setBoards(res.data)\n            })\n        .catch(error => console.log(error));\n    }, []);\n\n    // 글 작성 버튼을 클릭 시 글작성 페이지로 이동하게 해주는 함수를 정의한 것\n    // const createBoard = () => {\n    //     console.log(\"hello\");\n    //     navigate('/create-board');\n    // }\n\n    return (\n        <div>\n            <h2 className=\"text-center\">Boards List</h2>\n            <div className=\"row\">\n                <button className=\"btn btn-primary\"><Link to=\"/create-board\">글 작성</Link></button>\n            </div>\n            <div className =\"row\">\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                    <tr>\n                        <th>글 번호</th>\n                        <th>타이틀 </th>\n                        <th>작성자 </th>\n                        <th>작성일 </th>\n                        <th>갱신일 </th>\n                        <th>좋아요수</th>\n                        <th>조회수</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        boards.map(\n                            (board) =>\n                                <tr key = {board.no}>\n                                    <td> {board.no} </td>\n                                    <td> {board.title} </td>\n                                    <td> {board.memberNo} </td>\n                                    <td> {board.createdTime} </td>\n                                    <td> {board.updatedTime} </td>\n                                    <td> {board.likes} </td>\n                                    <td> {board.counts} </td>\n                                </tr>\n                        )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default ListBoardComponent;","import React, {Component} from 'react';\n\nclass FooterComponent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state={}\n    }\n\n    render() {\n        return (\n            <div>\n                <footer className=\"footer\">\n                    <span className=\"text-muted\"></span>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default FooterComponent;","import React, {Component} from 'react';\nimport BoardService from \"../service/BoardService\";\nimport { useNavigate } from 'react-router-dom';\n\nclass CreateBoardComponent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            type: '',\n            title: '',\n            contents: '',\n            memberNo : ''\n        }\n\n        // 폼 양식에 값이 입력되면 this.state에 정의된 변수의 값을 변경하도록 바인딩\n        this.changeTypeHandler = this.changeTypeHandler.bind(this);\n        this.changeTitleHandler = this.changeTitleHandler.bind(this);\n        this.changeContentsHandler = this.changeContentsHandler.bind(this);\n        this.changeMemberNoHandler = this.changeMemberNoHandler.bind(this);\n        this.createBoard = this.createBoard.bind(this);\n    }\n\n    changeTypeHandler = (event) => {\n        this.setState({type: event.target.value});\n    }\n\n    changeTitleHandler = (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    changeContentsHandler = (event) => {\n        this.setState({contents: event.target.value});\n    }\n\n    changeMemberNoHandler = (event) => {\n        this.setState({memberNo: event.target.value});\n    }\n\n    // 'Save' 버튼을 클릭시 API에 글 작성 리퀘스트를 보내는 함수를 선언\n    createBoard = (event) => {\n        event.preventDefault();\n        let board = {\n            type: this.state.type,\n            title: this.state.title,\n            contents: this.state.contents,\n            memberNo: this.state.memberNo\n        };\n\n        console.log(\"board => \"+ JSON.stringify(board));\n        BoardService.createBoard(board).then(res => {\n            this.props.history.push('/board');\n        });\n    }\n\n    // 글 작성 취소 버튼이 클릭되었을 때 글 목록 페이지로 이동하는 함수를 선언\n    cancel(){\n        this.props.history.push('/board');\n    }\n\n    render() {\n        const navigate = useNavigate();\n\n        return (\n            <div>\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\">새글을 작성해주세요</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Type </label>\n                                        <select placeholder=\"type\" name=\"type\" className=\"form-control\"\n                                                value={this.state.type} onChange={this.changeTypeHandler}>\n                                            <option value=\"1\">자유게시판</option>\n                                            <option value=\"2\">질문과 답변</option>\n                                        </select>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> Title </label>\n                                        <input type=\"text\" placeholder=\"title\" name=\"title\" className=\"form-control\"\n                                               value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> Contents  </label>\n                                        <textarea placeholder=\"contents\" name=\"contents\" className=\"form-control\"\n                                                  value={this.state.contents} onChange={this.changeContentsHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> MemberNo  </label>\n                                        <input placeholder=\"memberNo\" name=\"memberNo\" className=\"form-control\"\n                                               value={this.state.memberNo} onChange={this.changeMemberNoHandler}/>\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.createBoard}>Save</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft:\"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateBoardComponent;","import React, {useEffect, useState} from 'react';\nimport './App.css'\nimport {Route, Routes, useNavigate} from \"react-router-dom\";\nimport Members from \"./Members\";\nimport HeaderComponent from \"./components/HeaderComponent\";\nimport ListBoardComponent from \"./components/ListBoardComponent\";\nimport FooterComponent from \"./components/FooterComponent\";\nimport CreateBoardComponent from \"./components/CreateBoardComponent\";\n\nfunction App() {\n    return (\n        <div>\n            <HeaderComponent/>\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"/\" element = {<ListBoardComponent/>}></Route>\n                    <Route path=\"/board\" element = {<ListBoardComponent/>}></Route>\n                    <Route path=\"/create-board\" element = {<CreateBoardComponent/>}></Route>\n                </Routes>\n            </div>\n            <FooterComponent/>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter} from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}