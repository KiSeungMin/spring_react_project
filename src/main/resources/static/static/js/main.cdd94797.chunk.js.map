{"version":3,"sources":["components/board/HeaderComponent.js","service/BoardService.js","components/board/ListBoardComponent.js","components/board/FooterComponent.js","components/board/CreateBoardComponent.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","react_default","a","createElement","className","react_router_dom_dist","to","service_BoardService","BoardService","Object","classCallCheck","this","createClass","key","value","axios","get","board","post","ListBoardComponent","navigate","useNavigate","_useState","useState","_useState2","slicedToArray","boards","setBoards","useEffect","getBoards","then","res","data","catch","error","console","log","onClick","map","no","title","memberNo","createdTime","updatedTime","likes","counts","FooterComponent","CreateBoardComponent","type","setType","_useState3","_useState4","setTitle","_useState5","_useState6","contents","setContents","_useState7","_useState8","setMemberNo","placeholder","name","onChange","event","target","preventDefault","JSON","stringify","boardService","createBoard","style","marginLeft","App","board_HeaderComponent","dist","path","element","board_ListBoardComponent","board_CreateBoardComponent","board_FooterComponent","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.cdd94797.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst HeaderComponent = () => {\n    return (\n        <div>\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><Link to = \"/\"> Board-FullStack-App</Link> </div>\n                </nav>\n            </header>\n        </div>\n    );\n}\n\nexport default HeaderComponent;","import axios from \"axios\";\n\nconst BOARD_API_BASE_URL = \"http://localhost:8080/api/board\";\n\nclass BoardService{\n\n    getBoards(){\n        return axios.get(BOARD_API_BASE_URL);\n    }\n\n    createBoard(board){\n        return axios.post(BOARD_API_BASE_URL, board);\n    }\n}\n\nexport default new BoardService();","import React, {useEffect, useState} from 'react';\nimport BoardService from \"../../service/BoardService\";\nimport {Link, useNavigate} from \"react-router-dom\";\n\nconst ListBoardComponent = () =>{\n\n    const navigate = useNavigate();\n    const [boards, setBoards] = useState([]);\n\n    useEffect(() => {\n        BoardService.getBoards()\n            .then((res) => {\n                setBoards(res.data)\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    // 글 작성 버튼을 클릭 시 글작성 페이지로 이동하게 해주는 함수를 정의한 것\n    const createBoard = () => {\n        navigate('/create-board');\n    }\n\n    return (\n        <div>\n            <h2 className=\"text-center\">Boards List</h2>\n            <div className=\"row\">\n                <button className=\"btn btn-primary\" onClick={createBoard}>글 작성</button>\n            </div>\n            <div className =\"row\">\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                    <tr>\n                        <th>글 번호</th>\n                        <th>타이틀 </th>\n                        <th>작성자 </th>\n                        <th>작성일 </th>\n                        <th>갱신일 </th>\n                        <th>좋아요수</th>\n                        <th>조회수</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        boards.map(\n                            (board) =>\n                                <tr key = {board.no}>\n                                    <td> {board.no} </td>\n                                    <td> {board.title} </td>\n                                    <td> {board.memberNo} </td>\n                                    <td> {board.createdTime} </td>\n                                    <td> {board.updatedTime} </td>\n                                    <td> {board.likes} </td>\n                                    <td> {board.counts} </td>\n                                </tr>\n                        )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default ListBoardComponent;","import React, {Component} from 'react';\n\nconst FooterComponent = () =>{\n\n    return (\n        <div>\n            <footer className=\"footer\">\n                <span className=\"text-muted\"></span>\n            </footer>\n        </div>\n    );\n}\n\nexport default FooterComponent;","import React, {Component, useState} from 'react';\nimport BoardService from \"../../service/BoardService\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport boardService from \"../../service/BoardService\";\n\nconst CreateBoardComponent = () => {\n\n    const navigate = useNavigate();\n    const [type, setType] = useState('');\n    const [title, setTitle] = useState('');\n    const [contents, setContents] = useState('');\n    const [memberNo, setMemberNo] = useState('');\n\n    const changeTypeHandler = (event) => {\n        setType(event.target.value);\n    }\n\n    const changeTitleHandler = (event) => {\n        setTitle(event.target.value);\n    }\n\n    const changeContentsHandler = (event) => {\n        setContents(event.target.value);\n    }\n\n    const changeMemberNoHandler = (event) => {\n        setMemberNo(event.target.value);\n    }\n\n    // 'Save' 버튼을 클릭시 API에 글 작성 리퀘스트를 보내는 함수를 선언\n    const createBoard = (event) => {\n        event.preventDefault();\n\n        let board = {\n            type: type,\n            title: title,\n            contents: contents,\n            memberNo: memberNo\n        };\n\n        console.log(\"board => \"+ JSON.stringify(board));\n        boardService.createBoard(board).then(res => {\n            navigate(\"/board\");\n        });\n    }\n\n    // 글 작성 취소 버튼이 클릭되었을 때 글 목록 페이지로 이동하는 함수를 선언\n    const cancel = () => {\n        navigate(\"/board\");\n    }\n\n    return (\n        <div>\n            <div className = \"container\">\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                        <h3 className=\"text-center\">새글을 작성해주세요</h3>\n                        <div className = \"card-body\">\n                            <form>\n                                <div className = \"form-group\">\n                                    <label> Type </label>\n                                    <select placeholder=\"type\" name=\"type\" className=\"form-control\"\n                                            value={type} onChange={changeTypeHandler}>\n                                        <option value=\"1\">자유게시판</option>\n                                        <option value=\"2\">질문과 답변</option>\n                                    </select>\n                                </div>\n                                <div className = \"form-group\">\n                                    <label> Title </label>\n                                    <input type=\"text\" placeholder=\"title\" name=\"title\" className=\"form-control\"\n                                           value={title} onChange={changeTitleHandler}/>\n                                </div>\n                                <div className = \"form-group\">\n                                    <label> Contents  </label>\n                                    <textarea placeholder=\"contents\" name=\"contents\" className=\"form-control\"\n                                              value={contents} onChange={changeContentsHandler}/>\n                                </div>\n                                <div className = \"form-group\">\n                                    <label> MemberNo  </label>\n                                    <input placeholder=\"memberNo\" name=\"memberNo\" className=\"form-control\"\n                                           value={memberNo} onChange={changeMemberNoHandler}/>\n                                </div>\n                                <button className=\"btn btn-success\" onClick={createBoard}>Save</button>\n                                <button className=\"btn btn-danger\" onClick={cancel} style={{marginLeft:\"10px\"}}>Cancel</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateBoardComponent;","import React, {useEffect, useState} from 'react';\nimport './App.css'\nimport {Route, Routes, useNavigate} from \"react-router-dom\";\nimport Members from \"./Members\";\nimport HeaderComponent from \"./components/board/HeaderComponent\";\nimport ListBoardComponent from \"./components/board/ListBoardComponent\";\nimport FooterComponent from \"./components/board/FooterComponent\";\nimport CreateBoardComponent from \"./components/board/CreateBoardComponent\";\n\nfunction App() {\n    return (\n        <div>\n            <HeaderComponent/>\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"/\" element = {<ListBoardComponent/>}></Route>\n                    <Route path=\"board\" element = {<ListBoardComponent/>}></Route>\n                    <Route path=\"create-board\" element = {<CreateBoardComponent/>}></Route>\n                </Routes>\n            </div>\n            <FooterComponent/>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter} from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}