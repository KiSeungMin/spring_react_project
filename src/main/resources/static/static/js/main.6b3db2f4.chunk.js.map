{"version":3,"sources":["Members.js","App.js","reportWebVitals.js","index.js"],"names":["Members","_useState","useState","_useState2","Object","slicedToArray","members","setMembers","useEffect","axios","get","then","response","data","catch","error","console","log","react_default","a","createElement","App","className","dist","react_router_dist","path","element","src_Members","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"oOAsBeA,MAlBf,WACI,IAAAC,EAC8BC,mBAAS,MAAKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAArCK,EAAOH,EAAA,GAAEI,EAAUJ,EAAA,GAS1B,OANAK,oBAAU,WACNC,IAAMC,IAAI,gBACLC,KAAK,SAAAC,GAAQ,OAAIL,EAAWK,EAASC,QACrCC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MACjC,IAGCG,EAAAC,EAAAC,cAAA,wBACed,ICYRe,MAxBf,WAUI,OACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAY,OACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAa,KACVL,EAAAC,EAAAC,cAACI,EAAA,EAAM,KACHN,EAAAC,EAAAC,cAACI,EAAA,EAAK,CAACC,KAAK,gBAAc,6BAC1BP,EAAAC,EAAAC,cAACI,EAAA,EAAK,CAACC,KAAK,YAAU,6BACtBP,EAAAC,EAAAC,cAACI,EAAA,EAAK,CAACC,KAAK,cAAY,0BACxBP,EAAAC,EAAAC,cAACI,EAAA,EAAK,CAACC,KAAK,eAAeC,QAASR,EAAAC,EAAAC,cAACO,EAAO,OAAG,qCCVpDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAArB,KAAAoB,EAAAE,KAAA,UAAqBtB,KAAK,SAAAuB,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCADW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1B,EAAAC,EAAAC,cAACF,EAAAC,EAAM0B,WAAU,KACb3B,EAAAC,EAAAC,cAACG,EAAA,EAAa,KACVL,EAAAC,EAAAC,cAAC0B,EAAG,SAQdlB","file":"static/js/main.6b3db2f4.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\nimport React from 'react';\nimport axios from \"axios\";\n\nfunction Members(){\n    // useState 함수는 첫 번째 반환값이 초기 상태, 두 번째 반환값이 setter 함수인 배열을 반환한다.\n    const [members, setMembers] = useState(null);\n\n    // 화면이 랜더링될 때 호출\n    useEffect(() => {\n        axios.get('/api/members')\n            .then(response => setMembers(response.data))\n            .catch(error => console.log(error))\n    }, []);\n\n    return(\n        <div>\n            members : {members}\n        </div>\n    )\n}\n\nexport default Members;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport Members from \"./Members\";\n\nfunction App() {\n    //const [hello, setHello] = useState('')\n    /*\n    useEffect(() => {\n        axios.get('/api/hello')\n            .then(response => setHello(response.data))\n            .catch(error => console.log(error))\n    }, []);\n     */\n\n    return (\n        <div className = 'App'>\n            <BrowserRouter>\n                <Routes>\n                    <Route path=\"/members/new\">멤버 생성</Route>\n                    <Route path=\"/members\">멤버 목록</Route>\n                    <Route path=\"/api/hello\">api 테스트</Route>\n                    <Route path=\"/api/members\" element={<Members/>}>api 멤버 목록</Route>\n                </Routes>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}