{"version":3,"sources":["components/HeaderComponent.jsx","service/BoardService.js","components/ListBoardComponent.jsx","components/FooterComponent.jsx","components/CreateBoardComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","className","href","Component","service_BoardService","BoardService","axios","get","board","post","ListBoardComponent","boards","_this2","getBoards","then","res","setState","data","map","no","title","memberNo","createdTime","updatedTime","likes","counts","FooterComponent","CreateBoardComponent","changeTypeHandler","event","type","target","changeTitleHandler","changeContentsHandler","contents","changeMemberNoHandler","createBoard","preventDefault","console","log","JSON","stringify","useNavigate","navigate","bind","assertThisInitialized","placeholder","name","onChange","onClick","style","marginLeft","App","components_HeaderComponent","dist","path","element","components_ListBoardComponent","components_CreateBoardComponent","components_FooterComponent","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_router_dom_dist","src_App"],"mappings":"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","file":"static/js/main.938ef9cf.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass HeaderComponent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                        <div><a href=\"/\" className=\"navbar-brand\"> Board-FullStack-App</a> </div>\n                    </nav>\n                </header>\n            </div>\n        );\n    }\n\n\n}\n\nexport default HeaderComponent;","import axios from \"axios\";\n\nconst BOARD_API_BASE_URL = \"http://localhost:8080/api/board\";\n\nclass BoardService{\n\n    getBoards(){\n        return axios.get(BOARD_API_BASE_URL);\n    }\n\n    createBoard(board){\n        return axios.post(BOARD_API_BASE_URL, board);\n    }\n}\n\nexport default new BoardService();","import React, {Component, useEffect, useState} from 'react';\nimport BoardService from \"../service/BoardService\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nclass ListBoardComponent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            boards : []\n        };\n\n        //this.createBoard = this.createBoard.bind(this);\n    }\n\n    componentDidMount() {\n        BoardService.getBoards().then((res) => {\n            this.setState({ boards: res.data });\n        });\n    }\n\n    // 글 작성 버튼을 클릭 시 글작성 페이지로 이동하게 해주는 함수를 정의한 것\n    // createBoard(){\n    //     navigate('/create-board/');\n    // }\n\n    render() {\n        //const navigate = useNavigate();\n\n        return (\n            <div>\n                <h2 className=\"text-center\">Boards List</h2>\n                <div className=\"row\">\n                    {/*<button className=\"btn btn-primary\" onClick={() => navigate('/create-board/')}>글 작성</button>*/}\n                </div>\n                <div className =\"row\">\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                        <tr>\n                            <th>글 번호</th>\n                            <th>타이틀 </th>\n                            <th>작성자 </th>\n                            <th>작성일 </th>\n                            <th>갱신일 </th>\n                            <th>좋아요수</th>\n                            <th>조회수</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.boards.map(\n                                (board) =>\n                                    <tr key = {board.no}>\n                                        <td> {board.no} </td>\n                                        <td> {board.title} </td>\n                                        <td> {board.memberNo} </td>\n                                        <td> {board.createdTime} </td>\n                                        <td> {board.updatedTime} </td>\n                                        <td> {board.likes} </td>\n                                        <td> {board.counts} </td>\n                                    </tr>\n                            )\n                        }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ListBoardComponent;","import React, {Component} from 'react';\n\nclass FooterComponent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state={}\n    }\n\n    render() {\n        return (\n            <div>\n                <footer className=\"footer\">\n                    <span className=\"text-muted\"></span>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default FooterComponent;","import React, {Component} from 'react';\nimport BoardService from \"../service/BoardService\";\nimport { useNavigate } from 'react-router-dom';\n\nclass CreateBoardComponent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            type: '',\n            title: '',\n            contents: '',\n            memberNo : ''\n        }\n\n        // 폼 양식에 값이 입력되면 this.state에 정의된 변수의 값을 변경하도록 바인딩\n        this.changeTypeHandler = this.changeTypeHandler.bind(this);\n        this.changeTitleHandler = this.changeTitleHandler.bind(this);\n        this.changeContentsHandler = this.changeContentsHandler.bind(this);\n        this.changeMemberNoHandler = this.changeMemberNoHandler.bind(this);\n        this.createBoard = this.createBoard.bind(this);\n    }\n\n    changeTypeHandler = (event) => {\n        this.setState({type: event.target.value});\n    }\n\n    changeTitleHandler = (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    changeContentsHandler = (event) => {\n        this.setState({contents: event.target.value});\n    }\n\n    changeMemberNoHandler = (event) => {\n        this.setState({memberNo: event.target.value});\n    }\n\n    // 'Save' 버튼을 클릭시 API에 글 작성 리퀘스트를 보내는 함수를 선언\n    createBoard = (event) => {\n        event.preventDefault();\n        let board = {\n            type: this.state.type,\n            title: this.state.title,\n            contents: this.state.contents,\n            memberNo: this.state.memberNo\n        };\n\n        console.log(\"board => \"+ JSON.stringify(board));\n        BoardService.createBoard(board).then(res => {\n            const navigate = useNavigate();\n            navigate('/board');\n        });\n    }\n\n    // 글 작성 취소 버튼이 클릭되었을 때 글 목록 페이지로 이동하는 함수를 선언\n    cancel(){\n        const navigate = useNavigate();\n        navigate('/board');\n    }\n\n    render() {\n        const navigate = useNavigate();\n\n        return (\n            <div>\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\">새글을 작성해주세요</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Type </label>\n                                        <select placeholder=\"type\" name=\"type\" className=\"form-control\"\n                                                value={this.state.type} onChange={this.changeTypeHandler}>\n                                            <option value=\"1\">자유게시판</option>\n                                            <option value=\"2\">질문과 답변</option>\n                                        </select>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> Title </label>\n                                        <input type=\"text\" placeholder=\"title\" name=\"title\" className=\"form-control\"\n                                               value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> Contents  </label>\n                                        <textarea placeholder=\"contents\" name=\"contents\" className=\"form-control\"\n                                                  value={this.state.contents} onChange={this.changeContentsHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> MemberNo  </label>\n                                        <input placeholder=\"memberNo\" name=\"memberNo\" className=\"form-control\"\n                                               value={this.state.memberNo} onChange={this.changeMemberNoHandler}/>\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.createBoard}>Save</button>\n                                    <button className=\"btn btn-danger\" onClick={() => navigate('/board')} style={{marginLeft:\"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateBoardComponent;","import React, {useEffect, useState} from 'react';\nimport './App.css'\nimport {Route, Routes, useNavigate} from \"react-router-dom\";\nimport Members from \"./Members\";\nimport HeaderComponent from \"./components/HeaderComponent\";\nimport ListBoardComponent from \"./components/ListBoardComponent\";\nimport FooterComponent from \"./components/FooterComponent\";\nimport CreateBoardComponent from \"./components/CreateBoardComponent\";\n\nfunction App() {\n\n    const navigate = useNavigate();\n\n    return (\n        <div>\n            <HeaderComponent/>\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"/\" element = {<ListBoardComponent/>}></Route>\n                    <Route path=\"/board\" element = {<ListBoardComponent/>}></Route>\n                    <Route path=\"/create-board\" element = {<CreateBoardComponent/>}></Route>\n                </Routes>\n            </div>\n            <FooterComponent/>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter} from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}